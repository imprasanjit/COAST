#####view_resolver#####
spring.mvc.view.prefix: /WEB-INF/view/
spring.mvc.view.suffix: .jsp

#####custom_port#####
server.port=8081

######jspService is exceeding the 65535 bytes limit Error######
#server.servlet.jsp.init-parameters.mappedfile=false

#server.servlet.context-path=/coast

##### Spring Datasource #####
spring.jpa.database=postgresql
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.event.merge.entity_copy_observer=allow

##spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
#spring.jackson.serialization.fail-on-empty-beans=false
#spring.jpa.properties.hibernate.default_schema=wildlife_oltp
#spring.datasource.hikari.auto-commit=false<script type="text/javascript">
spring.datasource.hikari.connectionTimeout=2000000

##### Database Connectivity #####
#spring.datasource.url=jdbc:postgresql://14.98.253.214:5432/coast_java_final
#spring.datasource.url=jdbc:postgresql://14.98.253.214:5432/COAST_DB
#spring.jpa.properties.hibernate.default_schema=coast_oltp
#spring.datasource.username=postgres
#spring.datasource.password=Sparc#123

spring.datasource.url=jdbc:postgresql://10.150.0.126:5432/coast
spring.jpa.properties.hibernate.default_schema=coast_oltp
spring.datasource.username=cust_coast
spring.datasource.password=Coast@123

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.minimumIdle=1
spring.datasource.hikari.maximumPoolSize=1

##### multipartFile_config #####
spring.servlet.multipart.enabled=true
##spring.servlet.multipart.max-file-size=512MB
##spring.servlet.multipart.max-request-size=512MB

######For_windows######
#file.upload.projectdirectory=\\static\\uploads
#file.upload.projectdirectory=D:\\backup_coast

######For_linux######
file.upload.projectdirectory=/var/www/coast_upload/
##file.upload-dir=/var/www/coast_upload/


